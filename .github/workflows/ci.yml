name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check server formatting
        run: |
          cd server
          cargo fmt --all -- --check

      - name: Check client formatting
        run: |
          cd client
          cargo fmt --all -- --check

      - name: Lint server with clippy
        run: |
          cd server
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Lint client with clippy
        run: |
          cd client
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Build server
        run: |
          cd server
          cargo build --verbose

      - name: Build client
        run: |
          cd client
          cargo build --verbose

      - name: Run server tests
        run: |
          cd server
          cargo test --verbose

      - name: Run client tests
        run: |
          cd client
          cargo test --verbose
